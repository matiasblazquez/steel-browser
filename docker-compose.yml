services:
  api:
    platform: linux/amd64
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 20.12.0
    ports:
      - "3000:3000"
      - "9223:9223"
    volumes:
      - ./.cache:/app/.cache
    networks:
      - steel-network

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://api:3000
      - VITE_WS_URL=ws://api:3000
      - VITE_OPENAPI_URL=http://api:3000/documentation/json
    depends_on:
      - api
    networks:
      - steel-network

  n8n:
    image: n8nio/n8n:latest
    restart: always
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=bgg
      - DB_POSTGRESDB_USER=boardgames
      - DB_POSTGRESDB_PASSWORD=secret123
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-password}
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - TZ=Europe/Dublin
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
    volumes:
      - ./n8n_data:/home/node/.n8n
    depends_on:
      - api
      - postgres
    networks:
      - steel-network

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: boardgames
      POSTGRES_PASSWORD: secret123
      POSTGRES_DB: bgg
    ports:
      - "5436:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - steel-network

volumes:
  pg_data:

networks:
  steel-network:
    driver: bridge
